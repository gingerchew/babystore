const n=Promis.resolve(),o=c=>n.then(c);class l{constructor(t){this.prefix=t||""}static all(){return Array.from({length:localStorage.length},t=>localStorage.getItem(localStorage.key(t)))}static keys(){return Array.from({length:localStorage.length},t=>localStorage.key(t))}has(t){return o(r=>l.keys().includes(this.prefix+t))}find(t){return o(r=>{try{const e=localStorage.getItem(this.prefix+t);return JSON.parse(e)}catch(e){throw e}})}add(t,r){return o(e=>{try{const a=JSON.stringify(r);localStorage.setItem(this.prefix+t,a)}catch(a){throw a}return!0})}update(t,r){try{return o(e=>{let a=JSON.parse(localStorage.getItem(this.prefix+t));const s=Object.assign({},a,r);return localStorage.setItem(this.prefix+t,JSON.stringify(s)),!0})}catch(e){throw e}}clear(t){o(r=>localStorage.removeItem(this.prefix+t))}}var i=l;export{i as default};
//# sourceMappingURL=index.min.js.map
